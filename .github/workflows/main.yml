name: Build project and create GitHub Release

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Set up JDK 16
        uses: actions/setup-java@v2
        with:
          distribution: adopt
          java-version: 16

      - name: Set up Maven
        uses: stCarolas/setup-maven@v4.2
        with:
          maven-version: 3.8.1

      - name: Get version from pom.xml
        id: version
        run: echo "VERSION=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)" >> $GITHUB_ENV

      - name: Check if tag exists
        id: tag_exists
        run: |
          if git rev-parse "v${{ env.VERSION }}" >/dev/null 2>&1; then
            echo "TAG_EXISTS=true" >> $GITHUB_ENV
          else
            echo "TAG_EXISTS=false" >> $GITHUB_ENV
          fi

      - name: Exit if tag exists
        if: env.TAG_EXISTS == 'true'
        run: echo "Tag v${{ env.VERSION }} already exists. Skipping build and release."

      - name: Fetch commit messages
        if: env.TAG_EXISTS == 'false'
        id: fetch_commits
        run: |
          git fetch --tags
          LAST_TAG=$(git describe --tags --abbrev=0 $(git rev-list --tags --max-count=1))
          COMMIT_MESSAGES=$(git log $LAST_TAG..HEAD --pretty=format:"- %s")
          echo "COMMIT_MESSAGES<<EOF" >> $GITHUB_ENV
          echo "$COMMIT_MESSAGES" >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV

      - name: Build project
        if: env.TAG_EXISTS == 'false'
        run: mvn package -B

      - name: Rename .jar to include version
        if: env.TAG_EXISTS == 'false'
        run: |
          mv ./target/UltimateBingo*.jar ./target/UltimateBingo-${{ env.VERSION }}.jar

      - name: Create GitHub Release
        if: env.TAG_EXISTS == 'false'
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v${{ env.VERSION }}
          name: Release v${{ env.VERSION }}
          body: ${{ env.COMMIT_MESSAGES }}
          draft: false
          prerelease: false
          files: ./target/UltimateBingo-${{ env.VERSION }}.jar
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}

      - name: Notify Discord
        if: env.TAG_EXISTS == 'false'
        run: |
          JSON_PAYLOAD=$(jq -n \
            --arg title "UltimateBingo - Release v${{ env.VERSION }}" \
            --arg desc "${{ env.COMMIT_MESSAGES }}" \
            --arg url "https://github.com/${{ github.repository }}/releases/tag/v${{ env.VERSION }}" \
            --arg download "https://github.com/${{ github.repository }}/releases/download/v${{ env.VERSION }}/UltimateBingo-${{ env.VERSION }}.jar" \
            '{
              "embeds": [{
                "title": $title,
                "url": $url,
                "description": $desc,
                "color": 7506394,
                "fields": [
                  {
                    "name": "Download",
                    "value": "[Click here](\($download))"
                  }
                ],
                "footer": { "text": "Shantek â€¢ GitHub Release" },
                "timestamp": (now | todate)
              }]
            }')

          curl -H "Content-Type: application/json" \
               -X POST \
               -d "$JSON_PAYLOAD" \
               ${{ secrets.DISCORD_WEBHOOK_URL }}
